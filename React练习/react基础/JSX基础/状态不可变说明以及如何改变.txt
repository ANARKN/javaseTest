
//概念：不要直接修改状态的值，而是基于当前状态创建新的状态值  重要

state = {
  count: 0,
  list: [1, 2, 3],
  person: {
    name: 'jack',
    age: 18,
  },
}
//以下为错误演示

// 直接修改简单类型Number
this.state.count++
++this.state.count
this.state.count += 1
this.state.count = 1

// 直接修改数组
this.state.list.push(123)
this.state.list.spice(1, 1)

// 直接修改对象
this.state.person.name = 'rose'

//正确写法

this.setState({
  count: this.state.count + 1
  list: [...this.state.list, 4],
  person: {
     ...this.state.person,
     // 覆盖原来的属性 就可以达到修改对象中属性的目的
     name: 'rose'
  }
})